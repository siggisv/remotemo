name: Build

on:
  push:
    branches: ["main"]
    paths:
      - '**.cp?p?'
      - '**.hp?p?'
      - '**.*.in'
      - '.gitmodules'
      - '**/CMakeLists.txt'
      - '.github/workflows/**'

  pull_request:
    branches: ["main"]
    paths:
      - '**.cp?p?'
      - '**.hp?p?'
      - '**.*.in'
      - '.gitmodules'
      - '**/CMakeLists.txt'
      - '.github/workflows/**'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  REMOTEMO_WERROR: ON
  REMOTEMO_BUILD_SAMPLES: ON
  REMOTEMO_BUILD_TESTS: ON
  REMOTEMO_VERBOSE_TESTS: OFF
  REMOTEMO_TESTS_COLOR: ON

jobs:
  build-and-test:
    strategy:
      fail-fast: false # if a particular matrix build fails, don't skip the rest
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, macos-11, macos-12, windows-latest]
        # os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install dependencies on Linux
        if: runner.os == "Linux"
        run: |
          sudo apt-get update
          sudo apt-get install libsdl2-dev libsdl2-image-dev

      - name: Install dependencies on macOS
        if: runner.os == "macOS"
        run: |
          # `brew install sdl2 sdl2_image` when run after `brew update`
          # triggers upgrade of python which fails unless conflicting
          # symlinks are deleted. See:
          # https://github.com/actions/setup-python/issues/577
          brew update
          rm '/usr/local/bin/2to3'
          rm '/usr/local/bin/idle3'
          rm '/usr/local/bin/pydoc3'
          rm '/usr/local/bin/python3'
          rm '/usr/local/bin/python3-config'
          rm '/usr/local/bin/2to3-3.11'
          rm '/usr/local/bin/idle3.11'
          rm '/usr/local/bin/pydoc3.11'
          rm '/usr/local/bin/python3.11'
          rm '/usr/local/bin/python3.11-config'
          brew install sdl2 sdl2_image

      - name: Install dependencies on Windows
        if: runner.os == "Windows"
        run: |
          echo "Not implemented yet"
          exit 1

      - name: Configure CMake
        run: >
          cmake -B ${{github.workspace}}/build
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -DREMOTEMO_WERROR=${{env.REMOTEMO_WERROR}}
          -DREMOTEMO_BUILD_SAMPLES=${{env.REMOTEMO_BUILD_SAMPLES}}
          -DREMOTEMO_BUILD_TESTS=${{env.REMOTEMO_BUILD_TESTS}}
          -DREMOTEMO_VERBOSE_TESTS=${{env.REMOTEMO_VERBOSE_TESTS}}
          -DREMOTEMO_TESTS_COLOR=${{env.REMOTEMO_TESTS_COLOR}}

      - name: Build
        run: >
          cmake --build ${{github.workspace}}/build
          --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build/tests
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for
        # more detail
        run: ctest -C ${{env.BUILD_TYPE}} -VV

